{"version":3,"sources":["containers/Auth/Auth.js","components/Form/Form.module.css","components/Form/Input/Input.module.css","components/Form/Input/Input.js","components/Form/Form.js","containers/Auth/Auth.module.css"],"names":["Auth","state","email","password","formIsValid","changeHandler","event","formData","target","name","value","toString","setState","length","formConfig","config","valid","match","submitHandler","mode","preventDefault","isNewUser","props","onAuth","clearHandler","proceed","path","ordering","history","push","type","label","placeholder","required","html","Fragment","heading","action","inputs","this","change","submit","invalid","className","styles","buttonContainer","clicked","disabled","error","errorMessage","message","loading","show","clickBackdrop","isLoggedIn","to","React","Component","connect","auth","token","order","orderInprogress","dispatch","module","exports","Input","InputEl","onChange","textInput","id","otherProps","classes","checkValidity","join","textArea","options","map","el","key","text","suggestions","list","listName","inputContainer","htmlFor","inputLabel","Form","input","formContainer","formHeading","formBody","onSubmit","btnContainer","Button","btnType"],"mappings":"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","file":"static/js/4.41c03468.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./Auth.module.css\";\r\n\r\nimport Modal from \"../../utilities/Modal/Modal\";\r\nimport Form from \"../../components/Form/Form\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { auth } from \"../../store/actions/auth\";\r\n\r\nclass Auth extends React.Component {\r\n\tstate = {\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t\tformIsValid: true\r\n\t};\r\n\r\n\tchangeHandler = event => {\r\n\t\tconst formData = { ...this.state };\r\n\t\tformData[event.target.name] = event.target.value.toString(10);\r\n\t\tthis.setState({ ...formData });\r\n\t\tif (event.target.name === \"password\") {\r\n\t\t\tif (event.target.value.length >= 6) {\r\n\t\t\t\tthis.formConfig[1].config.valid = \"true\";\r\n\t\t\t\tthis.setState({ formIsValid: true });\r\n\t\t\t} else {\r\n\t\t\t\tthis.formConfig[1].config.valid = \"\";\r\n\t\t\t\tthis.setState({ formIsValid: false });\r\n\t\t\t}\r\n\t\t} else if (event.target.name === \"email\") {\r\n\t\t\tif (\r\n\t\t\t\tevent.target.value.match(/([a-z0-9_.-]+)@([\\da-z.-]+)\\.([a-z.]{2,6})/)\r\n\t\t\t) {\r\n\t\t\t\tthis.formConfig[0].config.valid = \"true\";\r\n\t\t\t\tthis.setState({ formIsValid: true });\r\n\t\t\t} else {\r\n\t\t\t\tthis.formConfig[0].config.valid = \"\";\r\n\t\t\t\tthis.setState({ formIsValid: false });\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tsubmitHandler = (event, mode) => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!this.state.formIsValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst isNewUser = mode === \"signup\" ? true : false;\r\n\t\tthis.props.onAuth(this.state.email, this.state.password, isNewUser);\r\n\t\tthis.clearHandler(\"proceed\");\r\n\t};\r\n\r\n\tclearHandler = proceed => {\r\n\t\tlet path = \"/build\";\r\n\t\tif (this.props.ordering && proceed) {\r\n\t\t\tpath = \"/checkout\";\r\n\t\t}\r\n\t\tthis.props.history.push(path);\r\n\t};\r\n\r\n\tformConfig = [\r\n\t\t{\r\n\t\t\tname: \"email\",\r\n\t\t\ttype: \"email\",\r\n\t\t\tlabel: \"Email\",\r\n\t\t\tconfig: {\r\n\t\t\t\tplaceholder: \"burger@burger.com\",\r\n\t\t\t\trequired: true,\r\n\t\t\t\tvalid: \"true\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"password\",\r\n\t\t\ttype: \"password\",\r\n\t\t\tlabel: \"Password (at least 6 characters long)\",\r\n\t\t\tconfig: {\r\n\t\t\t\trequired: true,\r\n\t\t\t\tvalid: \"true\"\r\n\t\t\t}\r\n\t\t}\r\n\t];\r\n\r\n\trender() {\r\n\t\tlet html = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Form\r\n\t\t\t\t\theading=\"Login\"\r\n\t\t\t\t\taction=\"SIGN IN\"\r\n\t\t\t\t\tinputs={this.formConfig}\r\n\t\t\t\t\tchange={this.changeHandler}\r\n\t\t\t\t\tsubmit={event => this.submitHandler(event, \"signin\")}\r\n\t\t\t\t\tinvalid={!this.formIsValid}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={styles.buttonContainer}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"cancelBtn\"\r\n\t\t\t\t\t\tclicked={event => this.submitHandler(event, \"signup\")}\r\n\t\t\t\t\t\tdisabled={!this.state.formIsValid}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSIGN UP\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.props.error ? (\r\n\t\t\t\t\t<p className={styles.errorMessage}>{this.props.error.message}</p>\r\n\t\t\t\t) : null}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\r\n\t\tif (this.props.loading) {\r\n\t\t\thtml = <Spinner />;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Modal show clickBackdrop={() => this.clearHandler(null)}>\r\n\t\t\t\t\t{html}\r\n\t\t\t\t</Modal>\r\n\t\t\t\t{this.props.isLoggedIn ? <Redirect to=\"/\" /> : null}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tloading: state.auth.loading,\r\n\t\terror: state.auth.error,\r\n\t\tisLoggedIn: !!state.auth.token,\r\n\t\tordering: state.order.orderInprogress\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonAuth: (email, password, isNewUser) =>\r\n\t\t\tdispatch(auth(email, password, isNewUser))\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Form_formContainer__3xp4C\",\"formHeading\":\"Form_formHeading__359xK\",\"formBody\":\"Form_formBody__3DF8g\",\"btnContainer\":\"Form_btnContainer__2ug9Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Input_inputContainer__3xMTE\",\"inputLabel\":\"Input_inputLabel__2jAj2\",\"textInput\":\"Input_textInput__S1WPd\",\"textArea\":\"Input_textArea__3MuUf\",\"invalid\":\"Input_invalid__3U50G\"};","import React from \"react\";\r\n\r\nimport styles from \"./Input.module.css\";\r\n\r\nconst Input = props => {\r\n\tlet InputEl = null;\r\n\tswitch (props.type) {\r\n\t\tcase \"text\":\r\n\t\tcase \"time\":\r\n\t\tcase \"date\":\r\n\t\tcase \"url\":\r\n\t\tcase \"search\":\r\n\t\t\tInputEl = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tonChange={props.change}\r\n\t\t\t\t\tclassName={styles.textInput}\r\n\t\t\t\t\ttype={props.type}\r\n\t\t\t\t\tname={props.name}\r\n\t\t\t\t\tid={props.name}\r\n\t\t\t\t\t{...props.otherProps}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase \"tel\":\r\n\t\tcase \"email\":\r\n\t\tcase \"password\":\r\n\t\t\tconst classes = [styles.textInput];\r\n\t\t\tif (props.checkValidity && !props.otherProps.valid) {\r\n\t\t\t\tclasses.push(styles.invalid);\r\n\t\t\t}\r\n\t\t\tInputEl = (\r\n\t\t\t\t<input\r\n\t\t\t\t\tonChange={props.change}\r\n\t\t\t\t\tclassName={classes.join(\" \")}\r\n\t\t\t\t\ttype={props.type}\r\n\t\t\t\t\tname={props.name}\r\n\t\t\t\t\tid={props.name}\r\n\t\t\t\t\t{...props.otherProps}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase \"textarea\":\r\n\t\t\tInputEl = (\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tonChange={props.change}\r\n\t\t\t\t\tclassName={styles.textArea}\r\n\t\t\t\t\tname={props.name}\r\n\t\t\t\t\tid={props.name}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase \"select\":\r\n\t\t\tconst options = props.otherProps.options.map(el => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<option value={el.value} key={el.value}>\r\n\t\t\t\t\t\t{el.text}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\tInputEl = (\r\n\t\t\t\t<select\r\n\t\t\t\t\tname={props.name}\r\n\t\t\t\t\tid={props.name}\r\n\t\t\t\t\tvalue={props.otherProps.options[0]}\r\n\t\t\t\t>\r\n\t\t\t\t\t{options}\r\n\t\t\t\t</select>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase \"datalist\":\r\n\t\t\tconst suggestions = props.otherProps.options.map(el => {\r\n\t\t\t\treturn <option value={el} key={el} />;\r\n\t\t\t});\r\n\t\t\tInputEl = (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={props.change}\r\n\t\t\t\t\t\tclassName={styles.textInput}\r\n\t\t\t\t\t\tlist={props.otherProps.listName}\r\n\t\t\t\t\t\tname={props.name}\r\n\t\t\t\t\t\tid={props.name}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<datalist\r\n\t\t\t\t\t\tid={props.otherProps.listName}\r\n\t\t\t\t\t\tvalue={props.otherProps.options[0]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{suggestions}\r\n\t\t\t\t\t</datalist>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tInputEl = <input />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.inputContainer}>\r\n\t\t\t<label htmlFor={props.name} className={styles.inputLabel}>\r\n\t\t\t\t{props.label}\r\n\t\t\t\t{props.label && props.otherProps.required ? <span>*</span> : null}\r\n\t\t\t</label>\r\n\t\t\t{InputEl}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Form.module.css\";\r\nimport Input from \"../Form/Input/Input\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nconst Form = props => {\r\n\tconst inputs = props.inputs.map(input => {\r\n\t\treturn (\r\n\t\t\t<Input\r\n\t\t\t\tname={input.name}\r\n\t\t\t\tkey={input.name}\r\n\t\t\t\tlabel={input.label}\r\n\t\t\t\ttype={input.type}\r\n\t\t\t\totherProps={input.config}\r\n\t\t\t\tchange={props.change}\r\n\t\t\t\tcheckValidity={props.invalid}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={styles.formContainer}>\r\n\t\t\t<h3 className={styles.formHeading}>{props.heading}</h3>\r\n\t\t\t<form className={styles.formBody} onSubmit={props.submit}>\r\n\t\t\t\t<div className={styles.btnContainer}>\r\n\t\t\t\t\t{inputs}\r\n\t\t\t\t\t<Button type=\"submitBtn\" btnType=\"submit\">\r\n\t\t\t\t\t\t{props.action}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"Auth_buttonContainer__10zSH\"};"],"sourceRoot":""}